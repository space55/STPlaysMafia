/*******************************************************************************
 * Copyright (C) Eamonn Nugent - All Rights Reserved
 *  Unauthorized copying of this file, via any medium is strictly prohibited
 *  Proprietary and confidential
 *  Written by Eamonn Nugent <elg.nugent@gmail.com>, 2016
 *******************************************************************************/

package game;

import java.util.Random;

import player.PlayerManager;
import player.Role;

public class Server
{
	public static boolean inProgress = false;
	public static ServerListener l;

	public static void main(String args[])
	{
		init();
	}

	public static void init()
	{
		l = new ServerListener();
		l.init();
	}

	public static void startGame()
	{
		int num = PlayerManager.players.size();
		int numMaf = (int) Math.round(Math.sqrt(num));
		boolean serialKiller = false;
		boolean oldMan = false;

		if (num > 15)
		{
			serialKiller = true;
		}
		if (num > 30)
		{
			oldMan = true;
		}

		generatePlayers(num, numMaf, serialKiller, oldMan);

		while (allThere())
		{
			day();
			night();
		}
	}

	public static void generatePlayers(int num, int numMaf, boolean sk, boolean om)
	{
		Role[] roles = new Role[num];
		Random rand = new Random();
		for (int i = 0; i < numMaf; i++)
		{
			int id = -1;
			while (id != -1 && roles[id] != null)
			{
				id = rand.nextInt(num);
			}
			roles[id] = Role.MAFIA;
		}

		if (sk)
		{
			int id = -1;
			while (id != -1 && roles[id] != null)
			{
				id = rand.nextInt(num);
			}
			roles[id] = Role.SERIAL_KILLER;
		}

		if (om)
		{
			int id = -1;
			while (id != -1 && roles[id] != null)
			{
				id = rand.nextInt(num);
			}
			roles[id] = Role.OLD_MAN;
		}

		int id = -1;
		while (id != -1 && roles[id] != null)
		{
			id = rand.nextInt(num);
		}
		roles[id] = Role.DOCTOR;

		id = -1;
		while (id != -1 && roles[id] != null)
		{
			id = rand.nextInt(num);
		}
		roles[id] = Role.INVESTIGATOR;

		for (int i = 0; i < num; i++)
		{
			if (roles[i] == null)
			{
				roles[i] = Role.INNOCENT;
			}
		}

		for (int i = 0; i < num; i++)
		{
			PlayerManager.get(i).setRole(roles[i]);
		}
	}

	public static void allThere()
	{
		boolean sk;
		boolean ma;
		boolean in;

		for (int i = 0; i < PlayerManager.players.size(); i++)
		{
			Role temp = PlayerManager.get(i).getRole();
			switch (temp)
			{
			case INNOCENT:
				in = true;
				break;
			case DOCTOR:
				in = true;
				break;
			case INVESTIGATOR:
				in = true;
				break;
			case OLD_MAN:
				in = true;
				break;
			case MAFIA:
				ma = true;
				break;
			case SERIAL_KILLER:
				sk = true;
				break;
			}
		}
		if (in && (sk || ma))
		{

		}
	}
}
