/*******************************************************************************
 * Copyright (C) Eamonn Nugent - All Rights Reserved
 *  Unauthorized copying of this file, via any medium is strictly prohibited
 *  Proprietary and confidential
 *  Written by Eamonn Nugent <elg.nugent@gmail.com>, 2016
 *******************************************************************************/

package bknd;

import java.awt.Dimension;
import java.awt.GridLayout;
import java.awt.Toolkit;
import java.util.ArrayList;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;

import game.OPlayer;
import game.Server;

public class Client extends JFrame
{
	public static String username = "undefined";
	public static ArrayList<String> messages = new ArrayList<String>();
	public static String deathMessage = "";
	public static JButton[][] buttons = {};
	public static JPanel panel;

	public void run()
	{
		init();
	}

	/**
	 * Initializes client.
	 * 
	 */
	public void init()
	{
		username = JOptionPane.showInputDialog("What is your username?");
	}

	/**
	 * Displays client GUI.
	 */
	public void startGame()
	{
		int columns = (int) Math.round(Math.sqrt(Server.players.size()));
		for (int i = 0; i < Server.players.size(); i++)
		{
			for (int a = 0; a < columns; a++)
			{
				if (i < Server.players.size())
				{
					Server.players.get(i).setButton(new JButton(Server.get(i).getUsername()));
					Server.players.get(i).getButton().setVisible(true);
					buttons[i][a] = Server.players.get(i).getButton();
					i++;
				}
			}
		}
		panel = new JPanel();
		GridLayout g = new GridLayout(buttons.length, buttons[0].length);
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		double width = screenSize.getWidth();
		double height = screenSize.getHeight();
		g.setHgap((int) ((width/buttons[0].length)/3));
		g.setVgap((int) ((width/buttons.length)/3));
		panel.setLayout(g);
		JScrollPane scrollPane = new JScrollPane(panel, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED,
				ScrollPaneConstants.HORIZONTAL_SCROLLBAR_AS_NEEDED);
		for (int i = 0; i < buttons.length; i++)
		{
			for (int j = 0; j < buttons[i].length; j++)
			{
				panel.add(buttons[i][j]);
			}
		}
		panel.setVisible(true);
		scrollPane.setVisible(true);
		add(scrollPane);
		setVisible(true);
	}

	/**
	 * Activates voting.
	 * 
	 */
	public void enableVote()
	{
		OPlayer.voteEnabled = true;
	}

	/**
	 * Disables voting.
	 */
	public void disableVote()
	{
		OPlayer.voteEnabled = false;
	}

	/**
	 * Adds the username of the dead player to a string.
	 * 
	 * @param p
	 *            The player that was killed.
	 */
	public void wasKilled(OPlayer p)
	{
		deathMessage += p.getUsername() + " was killed. \n";
	}

	/**
	 * Creates a pop-up window containing a message with the list of players who
	 * died over the night.
	 */
	public static void showDeathMessage()
	{
		JOptionPane.showMessageDialog(null, deathMessage);
		deathMessage = "";
	}
}
